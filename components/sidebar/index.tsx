"use client";
import React, { useState, useRef, useEffect } from "react";
import { useSession } from "next-auth/react";

import {
  Download,
  DownloadIcon,
  GraduationCap,
  LayoutDashboard,
  Play,
} from "lucide-react";
import { useTranslation } from "react-i18next";
import Link from "next/link";
import { useRouter } from "next/navigation";
import { usePathname } from "next/navigation";
import { Button } from "../ui/button";

const Sidebar = ({
  isTopBar = false,
  isOpened = false,
  toggleTopBar = null,
}) => {
  const { data: session } = useSession();
  const { t, i18n } = useTranslation();
  const router = useRouter();
  const pathname = usePathname();

  // State to handle sidebar hover
  const [isSidebarOpen, setIsSidebarOpen] = useState(isOpened);

  const sidebarRef = useRef(null);
  const [isLargeDevice, setIsLargeDevice] = useState(false);

  useEffect(() => {
    // Ensure this code runs only on the client
    const handleResize = () => {
      setIsLargeDevice(window.matchMedia("(min-width: 1024px)").matches);
    };

    // Call the function initially to set the state
    handleResize();

    // Add resize event listener
    window.addEventListener("resize", handleResize);

    // Clean up the event listener when the component is unmounted
    return () => {
      window.removeEventListener("resize", handleResize);
    };
  }, []);

  useEffect(() => {
    if (isOpened !== isSidebarOpen) setIsSidebarOpen(isOpened);
  }, [isOpened]);
  // Function to handle mouse enter
  const handleMouseEnter = () => {
    if (isLargeDevice) {
      setIsSidebarOpen(true);
    }
  };

  // Function to handle mouse leave
  const handleMouseLeave = () => {
    if (isLargeDevice) {
      setIsSidebarOpen(false);
    }
  };

  return (
    <div
      ref={sidebarRef}
      className={`w-full ${!isTopBar ? "hidden lg:block h-full top-0" : "block lg:hidden h-[calc(100%-80px)] top-[80px] left-0"}  border-r font-ibmplex bg-black fixed ${isSidebarOpen ? `${isTopBar ? "max-w-[100%]" : "max-w-[15rem]"}` : `${isTopBar ? "max-w-[0rem]" : "max-w-[5.2rem]"}`} transition-all z-[100] top-0`}
      onMouseEnter={handleMouseEnter}
      onMouseLeave={handleMouseLeave}
    >
      <div className="px-4 w-full mx-auto">
        <div className="text-center text-2xl cursor-pointer flex justify-between my-4 flex-col items-start">
          {!isTopBar && (
            <div className="flex items-center justify-between w-full gap-4 mb-4 border-b pb-4 border-[#151515]">
              <div className="flex items-center gap-3">
                <a href="/" className="flex items-center gap-3">
                  <img
                    src={"/images/logo-black.png"}
                    className="max-w-[50px] rounded-[100%]"
                  />
                  {isSidebarOpen ? (
                    <span className="text-[1.2rem] font-dosis">
                      <strong>NEFTIE</strong>.GG
                    </span>
                  ) : (
                    ""
                  )}
                </a>
              </div>
            </div>
          )}
          <div className="mb-2 border-b pb-4 border-[#151515] w-full">
            <div
              className={`font-inter flex items-center gap-4 ${isSidebarOpen ? "w-[12.8125rem]" : "w-[3.3rem]"} h-[3rem] cursor-pointer mt-0 justify-center p-[2px] rounded-md bg-gradient-to-r from-[#E9213D] to-[#8B0034] group relative z-[10]`}
            >
              <div className="flex items-center gap-4 w-full h-full justify-center group-hover:bg-black rounded-md text-[1rem] bg-transparent">
                <svg
                  width="24"
                  height="24"
                  viewBox="0 0 24 24"
                  fill="none"
                  className="group-hover:stroke-white transition-colors duration-300"
                >
                  <defs>
                    <linearGradient
                      id="gradient-stroke"
                      x1="0%"
                      y1="0%"
                      x2="100%"
                      y2="0%"
                    >
                      <stop offset="0%" stopColor="#E9213D" />
                      <stop offset="100%" stopColor="#8B0034" />
                    </linearGradient>
                  </defs>

                  <DownloadIcon
                    stroke="url(#gradient-stroke)"
                    size={22}
                    className=" stroke-white group-hover:stroke-[#8B0034] transition-colors duration-300"
                  />
                </svg>
                {isSidebarOpen ? "Download Now" : ""}
              </div>
            </div>
          </div>
          <div className="flex flex-col items-start justify-between gap-4 w-full">
            <Link
              onClick={() => {
                if (isTopBar) toggleTopBar(false);
              }}
              href="/"
              className="w-full"
            >
              <div className="text-xl lg:text-base font-normal flex items-center gap-3 cursor-pointer hover:bg-secondary py-2 px-2 rounded-sm w-full">
                <LayoutDashboard
                  size={23}
                  className={`${isSidebarOpen ? "" : "mx-auto"}`}
                />{" "}
                {isSidebarOpen ? t("translation:home") : ""}
              </div>
            </Link>
            <Link
              onClick={() => {
                if (isTopBar) toggleTopBar(false);
              }}
              href="/eggs"
              className="w-full"
            >
              <div className="text-xl lg:text-base font-normal flex items-center gap-3 cursor-pointer hover:bg-secondary py-2 px-2 rounded-sm">
                <svg
                  width={isSidebarOpen ? "25px" : "100%"}
                  height={"25px"}
                  fill="currentColor"
                  viewBox="0 0 32 32"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M23.8359 10.4671L21.6437 10.9045L21.7248 13.0806L18.3829 13.999L17.8507 15.5402L15.7644 16.851L15.6558 16.8102L17.1837 14.5945L17.1287 13.0806L20.4018 11.2969L19.5835 9.24343L21.6038 7.03051C19.981 5.17868 17.9827 4 15.8194 4C10.3967 3.99864 6 11.4019 6 18.2682C6 25.1345 10.3967 28.8627 15.8194 28.8627C21.2421 28.8627 25.6388 25.1345 25.6388 18.2682C25.6388 15.5933 24.9718 12.8353 23.8359 10.4671Z"
                    fill="currentColor"
                  ></path>
                </svg>{" "}
                {isSidebarOpen ? (
                  <span
                    className={`transition-opacity ease-in-out duration-1000 delay-750 ${
                      isSidebarOpen ? "opacity-1" : "opacity-0"
                    }`}
                  >
                    {t("translation:eggs")}
                  </span>
                ) : (
                  ""
                )}
              </div>
            </Link>
            <Link
              onClick={() => {
                if (isTopBar) toggleTopBar(false);
              }}
              href="/nefties"
              className="w-full"
            >
              <div className="text-xl lg:text-base font-normal flex items-center gap-3 cursor-pointer hover:bg-secondary py-2 px-2 rounded-sm">
                <svg
                  width={isSidebarOpen ? "25px" : "100%"}
                  height={"25px"}
                  viewBox="0 0 20 20"
                  fill="currentColor"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <g id="Icon/Navigation/Profile">
                    <g id="Tactics">
                      <path
                        d="M12.156 9.88392C12.4616 9.96798 12.6741 10.039 12.891 10.0833C13.9774 10.3062 14.7959 10.9546 15.4906 11.792C15.6425 11.9751 15.8039 12.0663 16.0393 12.1197C16.3755 12.196 16.7136 12.3257 17.0122 12.5016C17.6456 12.8743 17.6603 13.7391 17.067 14.1803C17.0243 14.2122 16.9809 14.2435 16.9452 14.2826C16.4265 14.8528 15.8734 14.9166 15.2584 14.4755C15.2348 14.4585 15.2048 14.4494 15.1563 14.4259C15.1487 14.4911 15.1436 14.5406 15.1372 14.5901C15.0619 15.2079 14.454 15.4868 13.95 15.1349C13.5245 14.8384 13.386 14.2793 13.6323 13.8095C13.742 13.6003 13.8728 13.4028 13.9997 13.191C13.5366 12.6267 12.965 12.2331 12.2766 12.0787C12.3334 12.8372 12.4023 13.5892 12.4406 14.3432C12.4572 14.6651 12.4527 14.9622 12.6262 15.2672C12.898 15.7436 12.8342 16.2721 12.6441 16.8045C12.734 16.8097 12.7927 16.8181 12.8508 16.8155C13.2418 16.7992 13.5296 16.9765 13.7152 17.3167C13.9136 17.6809 13.8926 18.0472 13.6661 18.3945C13.4511 18.7236 13.1117 18.8265 12.7442 18.6936C12.6613 18.6636 12.5599 18.6362 12.4788 18.6564C11.6635 18.8585 10.8463 18.2127 10.8431 17.3544C10.8412 16.8618 10.7576 16.7784 10.2696 16.7823C10.0782 16.7836 9.88684 16.7836 9.69545 16.7823C9.28844 16.7784 9.1736 16.8866 9.15255 17.2984C9.1181 17.9774 8.74554 18.5242 8.10376 18.6675C7.67952 18.7627 7.22083 18.7581 6.78447 18.7184C6.40042 18.6838 6.14077 18.2101 6.16948 17.7402C6.19818 17.2645 6.56373 16.8611 7.00903 16.8194C7.1028 16.811 7.1985 16.8181 7.33183 16.8181C7.31397 16.7106 7.31014 16.6187 7.28271 16.534C7.11046 15.9997 7.22019 15.5083 7.48558 15.0359C7.53087 14.9557 7.58191 14.8586 7.57681 14.772C7.5296 13.9105 7.58637 13.0581 7.77138 12.2155C7.78031 12.1758 7.77266 12.1321 7.77266 12.0735C7.04347 12.226 6.48526 12.6274 6.0068 13.1845C6.12546 13.382 6.25432 13.5788 6.36597 13.7854C6.6288 14.2715 6.49675 14.8313 6.05528 15.1362C5.57171 15.4705 4.99628 15.2327 4.87889 14.6494C4.86614 14.5869 4.85657 14.5237 4.84827 14.4774C4.60394 14.568 4.37682 14.6892 4.13632 14.7322C3.72611 14.8052 3.35418 14.7094 3.09581 14.3314C3.05498 14.2715 2.99757 14.2122 2.93505 14.1796C2.36344 13.887 2.32644 12.8815 2.99565 12.5023C3.33249 12.3113 3.72484 12.2247 4.09038 12.0845C4.19309 12.0454 4.32005 12.0103 4.38257 11.9301C5.21892 10.8588 6.27984 10.1785 7.61062 9.95169C7.66229 9.94257 7.71205 9.92302 7.84538 9.88392C7.6221 9.81028 7.46134 9.77509 7.31524 9.70667C6.17713 9.17297 5.44157 8.34668 5.40967 6.9945C5.39309 6.30049 5.32227 5.60909 5.49962 4.92095C5.5379 4.77107 5.44093 4.58795 5.41924 4.41852C5.30888 3.57529 5.40585 2.74834 5.64827 1.9416C5.82817 1.34273 6.3194 1.11726 6.88016 1.3688C7.54682 1.66856 7.99658 2.22637 8.4087 2.80894C8.56244 3.02594 8.71045 3.10805 8.97839 3.09828C9.68971 3.07221 10.4029 3.08199 11.1149 3.09893C11.3076 3.10349 11.4071 3.04093 11.534 2.89561C11.9417 2.42838 12.3366 1.93052 12.8182 1.55321C13.5615 0.971289 14.2096 1.25215 14.4252 2.1801C14.6224 3.03051 14.7506 3.88547 14.5044 4.75282C14.4827 4.82971 14.5018 4.92486 14.5197 5.00762C14.7066 5.87105 14.6619 6.73579 14.5139 7.59532C14.3142 8.75526 13.5098 9.35282 12.519 9.76206C12.4329 9.7979 12.3423 9.82136 12.1541 9.88327L12.156 9.88392ZM8.61157 12.9441C8.59689 12.946 8.58158 12.9473 8.56691 12.9493C8.62624 13.41 8.67026 13.8727 8.74809 14.3301C8.85463 14.959 9.35542 15.3858 9.97105 15.4034C10.5816 15.421 11.1449 15.0222 11.245 14.3986C11.3471 13.7612 11.4198 13.105 11.386 12.4632C11.3356 11.4987 10.6664 11.0256 10.0087 11.0282C9.27376 11.0308 8.65431 11.6186 8.6122 12.5218C8.60583 12.6626 8.61157 12.8033 8.61157 12.9447V12.9441ZM6.92418 6.70582L6.95352 6.70973C6.95352 6.83941 6.94651 6.96974 6.9548 7.09942C6.98606 7.59076 7.33693 7.96025 7.80073 7.99804C8.2658 8.03584 8.67472 7.73217 8.74937 7.2304C8.80168 6.88111 8.8087 6.51619 8.77361 6.1643C8.73023 5.71987 8.38254 5.4149 7.9666 5.37841C7.54937 5.34191 7.16788 5.58107 7.03391 6.00725C6.96437 6.22946 6.95863 6.47253 6.92418 6.70647V6.70582ZM11.2259 6.67324C11.2304 6.67324 11.2348 6.67324 11.2393 6.67324C11.2393 6.8355 11.224 6.99971 11.2425 7.16002C11.2961 7.62008 11.6151 7.94526 12.0431 7.99544C12.4693 8.04496 12.9261 7.80124 12.9879 7.36008C13.0536 6.89349 13.0313 6.39042 12.9305 5.9297C12.8393 5.51265 12.3704 5.31194 11.9596 5.38883C11.5621 5.46312 11.2648 5.79481 11.2278 6.21904C11.2144 6.36957 11.2259 6.52205 11.2259 6.67324ZM6.08144 3.11522C6.06613 3.11848 6.05146 3.12174 6.03614 3.125C6.08782 3.35438 6.1178 3.59223 6.20137 3.80858C6.23838 3.90437 6.3985 4.03014 6.47761 4.0145C6.81764 3.94608 7.15384 3.84572 7.48047 3.72517C7.64124 3.66587 7.69674 3.5023 7.57617 3.35242C7.33055 3.04615 7.09643 2.72097 6.80743 2.46161C6.49739 2.18336 6.13184 2.36713 6.08272 2.7907C6.07059 2.89757 6.0808 3.00705 6.0808 3.11522H6.08144ZM13.9385 3.0494C13.9366 3.02073 13.9557 2.92298 13.9225 2.85C13.8479 2.68318 13.7816 2.45054 13.6482 2.38993C13.5187 2.33063 13.2629 2.39906 13.1468 2.50593C12.8846 2.74834 12.667 3.04354 12.4457 3.32896C12.3079 3.50621 12.3736 3.66587 12.5656 3.74472C12.7602 3.82487 12.9758 3.85224 13.1678 3.9363C13.7599 4.19631 13.8473 3.86462 13.9366 3.36545C13.9519 3.28204 13.9385 3.19277 13.9385 3.04875V3.0494ZM10.0597 8.84454C10.0814 8.86409 10.128 8.93381 10.1918 8.95923C10.4731 9.07131 10.7538 9.19513 11.0466 9.25834C11.1219 9.27463 11.2399 9.08565 11.3388 8.99051C11.2642 8.91426 11.1902 8.77416 11.1143 8.77351C10.7679 8.77025 10.5114 8.62558 10.2939 8.35971C10.1171 8.14466 9.90024 8.13945 9.72288 8.35384C9.50407 8.61776 9.25207 8.77025 8.90439 8.7722C8.82975 8.7722 8.70598 8.88038 8.69323 8.95401C8.67919 9.03482 8.74809 9.1847 8.81699 9.21337C8.93373 9.26225 9.09322 9.28049 9.20933 9.23813C9.48301 9.13843 9.74202 8.99507 10.0591 8.84454H10.0597Z"
                        fill="currentColor"
                      ></path>
                      <path
                        d="M9.07465 12.9936C9.0855 12.8099 9.08996 12.6248 9.1091 12.4423C9.1595 11.9543 9.53398 11.5626 9.96587 11.5366C10.3754 11.5118 10.8105 11.8565 10.8864 12.3296C10.9981 13.0223 10.9247 13.7157 10.7455 14.3895C10.6549 14.7283 10.3365 14.9017 9.96651 14.8782C9.57289 14.8535 9.31516 14.6756 9.24371 14.3145C9.15758 13.8805 9.11357 13.4381 9.05168 12.9989C9.05934 12.9969 9.06763 12.9956 9.07529 12.9936H9.07465Z"
                        fill="currentColor"
                      ></path>
                      <path
                        d="M8.56302 6.76182C8.56302 6.79441 8.56302 6.82634 8.56302 6.85892C8.56493 7.25186 8.4367 7.45127 8.18152 7.45127C7.93973 7.45127 7.79683 7.25838 7.77769 6.89476C7.77068 6.75531 7.76366 6.61259 7.78216 6.4751C7.8147 6.23855 7.93144 6.06325 8.19173 6.07107C8.45584 6.07889 8.55281 6.25679 8.55983 6.50312C8.56238 6.58914 8.55983 6.6758 8.55983 6.76182H8.56302Z"
                        fill="currentColor"
                      ></path>
                      <path
                        d="M12.2344 6.72742C12.2255 6.85645 12.2204 6.95354 12.2121 7.04999C12.1917 7.28719 12.0679 7.44358 11.8331 7.44619C11.5779 7.4488 11.4535 7.26894 11.4357 7.02848C11.421 6.83624 11.4357 6.64075 11.451 6.44786C11.4682 6.22825 11.5773 6.07968 11.8076 6.07055C12.0309 6.06143 12.1661 6.18394 12.2063 6.4042C12.2274 6.52019 12.228 6.6401 12.235 6.72677L12.2344 6.72742Z"
                        fill="currentColor"
                      ></path>
                    </g>
                  </g>
                </svg>{" "}
                {isSidebarOpen ? t("translation:nefties") : ""}
              </div>
            </Link>

            <Link
              onClick={() => {
                if (isTopBar) toggleTopBar(false);
              }}
              href="/bosses"
              className="w-full"
            >
              <div className="text-xl lg:text-base font-normal flex items-center gap-3 cursor-pointer hover:bg-secondary py-2 px-2 rounded-sm">
                <img
                  src={"/images/bosses-icon.png"}
                  className={`w-[1rem] ${isSidebarOpen ? "ml-1 mr-1" : "mx-auto"}`}
                />
                {isSidebarOpen ? "Elites & Bosses" : ""}
              </div>
            </Link>
            <Link
              onClick={() => {
                if (isTopBar) toggleTopBar(false);
              }}
              href="/tier-list"
              className="w-full"
            >
              <div className="text-xl lg:text-base font-normal flex items-center gap-3 cursor-pointer hover:bg-secondary py-2 px-2 rounded-sm">
                <svg
                  width={isSidebarOpen ? "25px" : "100%"}
                  height={"25px"}
                  viewBox="0 0 32 32"
                  fill={"white"}
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M28 12.0653L24.3445 22.6867L8.20038 21.4929L7.13202 21.3893L4 12.0653L5.13532 10.2463L9.74356 14.1198L10.0449 13.9941L15.4263 5H16.5737L22.0403 14.0821L22.366 14.0664L27.4795 10.7804L28 12.0653Z"
                    fill={"white"}
                  />
                  <path
                    d="M7.60989 22.96L8.29169 25.1654L22.8226 27L23.7418 24.3611L7.60989 22.96Z"
                    fill={"white"}
                  />
                </svg>
                {isSidebarOpen ? t("translation:tier_list") : ""}
              </div>
            </Link>

            <Link
              onClick={() => {
                if (isTopBar) toggleTopBar(false);
              }}
              href="/learn"
              className="w-full"
            >
              <div className="text-xl lg:text-base font-normal flex items-center gap-3 cursor-pointer hover:bg-secondary py-2 px-2 rounded-sm">
                <GraduationCap className={`w-[1.5625rem]`} />
                {isSidebarOpen
                  ? t("translation:video_categories.tutorials.title")
                  : ""}
              </div>
            </Link>
            {/* <Link onClick={() => { if(isTopBar) toggleTopBar(false); }} href="/items" className="w-full">
              <div className="text-xl lg:text-base font-normal flex items-center gap-3 cursor-pointer hover:bg-secondary py-2 px-2 rounded-sm">
                <svg
                  width={isSidebarOpen ? "25px" : "100%"}
                  height={"25px"}
                  viewBox="0 0 24 24"
                  className={isSidebarOpen ? "" : "ml-auto"}
                  fill="currentColor"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M1.69507 18.9963C1.70335 16.2156 3.94274 13.9886 6.71818 14.003C9.46257 14.0195 11.6709 16.259 11.6709 19.0232C11.6709 21.7998 9.43567 24.0103 6.63953 24C3.87444 23.9896 1.68887 21.777 1.69714 18.9963H1.69507ZM9.17282 22.0477C8.51673 21.3515 7.88134 20.6821 7.19421 19.9528C7.19421 20.9383 7.18593 21.8039 7.2087 22.6695C7.2087 22.7418 7.43222 22.874 7.54398 22.8678C8.15661 22.8327 8.67403 22.5745 9.17282 22.0497V22.0477ZM7.18593 18.1101C7.88755 17.3622 8.52294 16.6866 9.16247 16.0049C8.6761 15.4678 8.14626 15.2074 7.5088 15.2033C7.40117 15.2033 7.20042 15.3459 7.19835 15.4264C7.17558 16.2776 7.18386 17.1308 7.18386 18.1121L7.18593 18.1101ZM5.83443 18.5935C5.09348 17.8973 4.41877 17.261 3.73371 16.6164C3.21629 17.0854 2.95137 17.5977 2.91411 18.2092C2.90584 18.3332 3.04864 18.5728 3.12936 18.5769C3.98414 18.6038 4.84098 18.5935 5.83443 18.5935ZM7.6723 18.6017C8.65333 18.6017 9.49155 18.61 10.3298 18.5914C10.4229 18.5893 10.5905 18.4323 10.5905 18.3497C10.5905 17.67 10.3484 17.0936 9.76475 16.635C9.07554 17.2837 8.40911 17.9097 7.6723 18.6038V18.6017ZM7.66816 19.4467C8.41118 20.1491 9.09417 20.7916 9.77096 21.43C10.4539 20.7916 10.6775 20.207 10.5285 19.4467H7.66816ZM6.3208 19.9549C5.67506 20.6387 5.08935 21.242 4.53053 21.87C4.46844 21.9403 4.51191 22.2398 4.58641 22.277C5.03346 22.5022 5.49707 22.6964 5.97103 22.8637C6.05382 22.8926 6.30218 22.7418 6.30425 22.6695C6.32701 21.8039 6.31873 20.9362 6.31873 19.9549H6.3208ZM5.83236 19.4591C4.84512 19.4591 3.99035 19.4488 3.13971 19.4756C3.05692 19.4777 2.90584 19.7132 2.91411 19.833C2.94723 20.4445 3.21629 20.9569 3.7275 21.4403C4.41049 20.7978 5.08521 20.1636 5.83443 19.4591H5.83236ZM6.33529 18.1183C6.33529 17.1453 6.33529 16.3189 6.33529 15.4946C6.33529 15.2653 6.23802 15.1041 5.98345 15.1971C5.51363 15.3686 5.04588 15.5525 4.59469 15.7652C4.51811 15.8024 4.44982 16.0772 4.50156 16.135C5.07693 16.7837 5.67506 17.4118 6.33736 18.1204L6.33529 18.1183ZM6.69748 18.5274C6.53398 18.7897 6.35806 18.9467 6.37875 19.0728C6.40152 19.207 6.61677 19.4054 6.73681 19.3992C6.86099 19.393 7.05347 19.1761 7.06382 19.0397C7.07417 18.9137 6.88169 18.7711 6.69541 18.5274H6.69748ZM13.217 8.60066C13.2377 9.20597 13.2666 9.20804 12.6395 9.20804C10.3153 9.20804 7.98896 9.20804 5.66472 9.20804C4.36082 9.20804 4.37531 9.20804 4.41877 7.91684C4.44568 7.09461 4.42498 6.27031 4.42498 5.39437C4.15592 5.51212 3.9593 5.62781 3.74612 5.68153C3.34875 5.78069 3.24112 6.01414 3.25768 6.40666C3.28873 7.15659 3.23698 7.91271 3.27838 8.66264C3.30321 9.12747 3.12729 9.23696 2.70094 9.21424C2.14212 9.18531 1.5771 9.19151 1.01829 9.22043C0.387038 9.25555 -0.00206146 9.63362 8.21577e-06 10.1563C0.00207789 10.6893 0.432571 11.0715 1.0721 11.0921C1.71163 11.1128 2.35323 11.1335 2.99276 11.1335C6.69748 11.1376 10.4001 11.1376 14.1049 11.1335C14.6326 11.1335 15.1625 11.1211 15.6902 11.0839C16.2428 11.0446 16.6174 10.6624 16.6299 10.1728C16.6423 9.67493 16.2966 9.301 15.7296 9.2349C15.4295 9.19977 15.1211 9.19977 14.8168 9.21217C14.5209 9.22457 14.4236 9.10268 14.4277 8.81758C14.4401 8.08212 14.4422 7.34459 14.4215 6.60912C14.4174 6.46657 14.3284 6.25792 14.2146 6.20007C13.9351 6.05752 13.6185 5.98522 13.2108 5.84887C13.2108 6.81571 13.188 7.70819 13.219 8.60066H13.217ZM2.69887 14.9224C5.14109 12.6147 8.88306 12.9246 10.8886 15.193C10.9817 15.2983 11.1597 15.381 11.3004 15.3851C12.2773 15.4016 13.2542 15.3996 14.2332 15.3851C14.3325 15.3851 14.5147 15.2446 14.5167 15.1661C14.5354 14.1166 14.5291 13.0672 14.5291 11.9929H2.60159V14.9575C2.67196 14.9347 2.69059 14.9347 2.70094 14.9244L2.69887 14.9224ZM12.2215 17.6927C12.2587 17.7795 12.4512 17.8415 12.5712 17.8415C14.1711 17.8374 15.771 17.8229 17.3708 17.8043C17.7827 17.7981 18.1428 17.6411 18.298 17.2424C18.4036 16.9738 18.5609 16.9407 18.8051 16.9407C20.2787 16.9469 21.7502 16.9469 23.2239 16.9407C23.6978 16.9387 24.0021 16.6846 24 16.3334C23.9979 15.9822 23.6937 15.7446 23.2135 15.7405C22.5574 15.7322 21.9013 15.7405 21.2452 15.7384C18.8755 15.7281 16.5078 15.7136 14.138 15.7033C13.2315 15.6991 12.327 15.7033 11.4226 15.7033C11.6999 16.4057 11.9441 17.0564 12.2194 17.6948L12.2215 17.6927ZM12.7989 0.42998C13.0535 1.76456 13.3122 3.09914 13.5688 4.43372C13.6516 4.86756 13.7427 5.28487 14.2725 5.41089C14.8292 5.54311 15.3239 5.46874 15.7358 5.05142C16.2077 4.5742 16.3505 3.99574 16.3029 3.33672C16.2201 2.16328 15.6054 1.22742 14.9845 0.29363C14.9038 0.171742 14.7485 0.0271277 14.6223 0.02093C14.0179 -0.00799278 13.4136 0.00853451 12.772 0.00853451C12.7823 0.186203 12.7761 0.312223 12.7989 0.432046V0.42998ZM2.01794 1.10967C1.89997 1.40716 1.77372 1.70465 1.71163 2.01453C1.62884 2.41739 1.54192 2.83677 1.57503 3.24169C1.60815 3.66107 1.7344 4.09078 1.90411 4.47917C2.16282 5.06795 2.82098 5.36338 3.41705 5.23529C4.08141 5.09274 4.36082 4.74154 4.42912 3.99781C4.51604 3.05989 4.62574 2.12196 4.71473 1.18404C4.82857 0.000270903 4.82443 0.000270869 3.65092 0.000270869C2.85754 0.000270869 2.31322 0.370069 2.01794 1.10967ZM7.68265 4.59486C7.68265 4.73947 7.76751 4.90474 7.86271 5.02044C8.41118 5.69599 9.48534 5.72904 10.0731 5.08654C10.1725 4.97912 10.2594 4.80765 10.2553 4.66923C10.2077 3.21483 10.1456 1.76043 10.0669 0.308092C10.0607 0.20273 9.89514 0.0229959 9.79786 0.0188641C9.14591 -0.00799277 8.49189 0.00440269 7.67644 0.00440269C7.67644 1.59309 7.6723 3.09501 7.68472 4.59486H7.68265ZM4.76027 4.55974C4.74578 4.72294 4.8534 4.9316 4.96723 5.06382C5.42049 5.58856 6.21525 5.71665 6.80304 5.33445C7.01001 5.20017 7.26458 4.944 7.27492 4.73327C7.34943 3.26441 7.3722 1.79142 7.39083 0.318421C7.39083 0.215126 7.23146 0.0229959 7.1404 0.0188641C6.51949 -0.00799277 5.89652 0.00440269 5.21973 0.00440269C5.0583 1.5683 4.89687 3.06195 4.76234 4.55974H4.76027ZM10.6588 4.66097C10.7002 5.22496 11.1742 5.53072 11.702 5.66293C12.2173 5.79309 12.7037 5.68772 13.0576 5.27248C13.1756 5.13406 13.2646 4.88822 13.2335 4.71468C12.9727 3.25202 12.6871 1.79348 12.3932 0.337014C12.3684 0.21306 12.2256 0.0250618 12.1283 0.0188641C11.5902 -0.0121246 11.0479 0.00440269 10.4415 0.00440269C10.5119 1.60135 10.5471 3.13426 10.6609 4.66097H10.6588ZM13.0762 19.8372C13.3494 21.0519 13.6268 22.2667 13.9041 23.4814C13.9703 23.7727 14.1235 24.0062 14.4629 23.9463C14.8086 23.8843 14.8499 23.6095 14.8127 23.3141C14.7982 23.2046 14.7713 23.0951 14.7465 22.9856C14.5084 21.9258 14.2663 20.866 14.0324 19.8062C13.8586 19.0232 13.8524 19.0149 12.9417 19.1554C12.9914 19.4054 13.0266 19.6223 13.0762 19.8372ZM12.3104 18.2071C12.3291 18.4199 12.3415 18.5852 12.3622 18.8249C13.0928 18.6224 13.9331 19.1533 14.5457 18.2071H12.3104Z"
                    fill="currentColor"
                  ></path>
                </svg>
                {isSidebarOpen ? "Items" : ""}
              </div>
            </Link> */}
          </div>
        </div>
      </div>
    </div>
  );
};

export default Sidebar;
